@using GraduaitionProjectITI.ViewModel.ConfirmOrder;
@model UserOrdersDataViewModel
@{
    var UserLogged = ViewData["UserLogged"] as GraduaitionProjectITI.Models.Entity.ApplicationUser;

}

<form class="needs-validation text-dark" asp-action="Payment" method="post">
    <div class="row g-3">
        <div class="col-sm-6">
            <label for="firstName" class="form-label">First name</label>
            <input type="text" class="form-control" id="firstName" placeholder="" value="@UserLogged.FirstName" data-val="true" data-val-required="Username is required">
            <span class="field-validation-valid" data-valmsg-for="firstName" data-valmsg-replace="true"></span>
        </div>

        <div class="col-sm-6">
            <label for="lastName" class="form-label">Last name</label>
            <input type="text" class="form-control" id="lastName" placeholder="" value="@UserLogged.LastName" required>
            <div class="invalid-feedback">
                Valid last name is required.
            </div>
        </div>

        <div class="col-12">
            <label for="username" class="form-label">Username</label>
            <div class="input-group has-validation">
                <span class="input-group-text">T</span>
                <input type="text" class="form-control" id="username" placeholder="Username" required value="@UserLogged.UserName">
                <div class="invalid-feedback">
                    Your username is required.
                </div>
            </div>
        </div>

        <div class="col-12">
            <label for="email" class="form-label">Email <span class="text-body-secondary">(Optional)</span></label>
            <input type="email" class="form-control" id="email" value="@UserLogged.Email">
            <div class="invalid-feedback">
                Please enter a valid email address for shipping updates.
            </div>
        </div>

        <div class="col-12">
            <label for="address" class="form-label">Address</label>
            <input type="text" class="form-control" id="address" placeholder="1234 Main St" required value="@UserLogged.Adress">
            <div class="invalid-feedback">
                Please enter your shipping address.
            </div>
        </div>

        <div class="col-12">
            <label for="address2" class="form-label">Address  <span class="text-body-secondary">(In Detail)</span></label>
            <input type="text" class="form-control" id="address2" placeholder="Apartment or suite" name="Destination" required>
        </div>




        <hr class="my-4">

        <h4 class="mb-3">Payment</h4>

        <div class="my-3">
            <div class="form-check">
                <input id="credit" name="paymentMethod" type="radio" class="form-check-input" checked required>
                <label class="form-check-label" for="credit">Cash On Delivery</label>
            </div>
            <div class="form-check">
                <input id="debit" name="paymentMethod" type="radio" class="form-check-input" onchange="checkedpaypal()" required>
                <label class="form-check-label" for="debit">Paypal</label>
            </div>
        </div>
        @*
        <div id="vodafoneCashDetails" class="hidden">
        <p>Vodafone Cash Number: 0100000000</p>
        </div>*@


        <hr class="my-4">

        <input type="hidden" name="TotalCost" value="@Model.TotalCost" />
        <input type="hidden" name="UserID" value="@Model.UserID" />
        @for (int i = 0; i < Model.ProductData.Count; i++)
        {
        <div>
                @Html.HiddenFor(model => model.ProductData[i].Id)
                @Html.HiddenFor(model => model.ProductData[i].Count)
        </div>
        }






        <button class="w-100 btn btn-primary btn-lg rounded justify-content-center" type="submit" onclick="deleteLS()">Continue to checkout</button>
</form>
